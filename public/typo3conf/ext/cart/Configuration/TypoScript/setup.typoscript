ajaxCart = PAGE
ajaxCart {
    typeNum = {$plugin.tx_cart.settings.addToCartByAjax}

    config {
        disableAllHeaderCode = 1
        xhtml_cleaning = 0
        admPanel = 0
        debug = 0
        no_cache = 1
    }

    10 < tt_content.list.20.cart_cart
}

ajaxCurrency = PAGE
ajaxCurrency {
    typeNum = 2278003

    config {
        disableAllHeaderCode = 1
        xhtml_cleaning = 0
        admPanel = 0
        debug = 0
        no_cache = 1
    }

    10 < tt_content.list.20.cart_currency
}

page.includeCSS.tx_cart = EXT:cart/Resources/Public/Stylesheets/cart.css
page.includeJSFooter.tx_cart = EXT:cart/Resources/Public/JavaScripts/cart.js

plugin.tx_cart {

    view {
        templateRootPaths.0 = {$plugin.tx_cart.view.templateRootPath}
        partialRootPaths.0 = {$plugin.tx_cart.view.partialRootPath}
        layoutRootPaths.0 = {$plugin.tx_cart.view.layoutRootPath}
    }

    persistence {
        storagePid = {$plugin.tx_cart.persistence.storagePid}
    }

    mvc {
        callDefaultActionIfActionCantBeResolved = 1
    }
    features {
        skipDefaultArguments = 1
    }

    finishers {
        order {
            100 {
                class = Extcode\Cart\Domain\Finisher\Order\OrderFinisher
            }
            110 {
                class = Extcode\Cart\Domain\Finisher\Order\OrderNumberFinisher
            }
            200 {
                class = Extcode\Cart\Domain\Finisher\Order\StockFinisher
            }
            300 {
                class = Extcode\Cart\Domain\Finisher\Order\PaymentFinisher
            }
            400 {
                class = Extcode\Cart\Domain\Finisher\Order\EmailFinisher
            }
            500 {
                class = Extcode\Cart\Domain\Finisher\Order\ClearCartFinisher
            }
        }
    }

    settings {
        cart {
            pid = {$plugin.tx_cart.settings.cart.pid}
            isNetCart = {$plugin.tx_cart.settings.cart.isNetCart}

            acceptTermsAndConditions.pid = {$plugin.tx_cart.settings.cart.acceptTermsAndConditions.pid}
            acceptRevocationInstruction.pid = {$plugin.tx_cart.settings.cart.acceptRevocationInstruction.pid}
            acceptPrivacyPolicy.pid = {$plugin.tx_cart.settings.cart.acceptPrivacyPolicy.pid}
        }

        order {
            pid = {$plugin.tx_cart.settings.order.pid}
        }

        allowedCountries {
            de = Deutschland
            at = Österreich
            ch = Schweiz
        }
        defaultCountry = de

        currencies {
            default = 1
            1 {
                code = EUR
                sign = €
                translation = 1.00
            }
        }

        format.currency {
            currencySign       = {$plugin.tx_cart.settings.format.currency.currencySign}
            decimalSeparator   = {$plugin.tx_cart.settings.format.currency.decimalSeparator}
            thousandsSeparator = {$plugin.tx_cart.settings.format.currency.thousandsSeparator}
            prependCurrency    = {$plugin.tx_cart.settings.format.currency.prependCurrency}
            separateCurrency   = {$plugin.tx_cart.settings.format.currency.separateCurrency}
            decimals           = {$plugin.tx_cart.settings.format.currency.decimals}
        }

        showAction {
            media {
                image {
                    size {
                        small.maxWidth = 100
                        small.maxHeight =
                        medium.maxWidth = 300
                        medium.maxHeight =
                        large.maxWidth = 600
                        large.maxHeight =
                    }
                }
            }
        }
        teaserAction < .showAction
        listAction < .showAction

        showCartAction {
            showPartials {
                couponForm = true

                # if setting shippingAddressForm to false please disable all validations too
                shippingAddressForm = true

                shippingMethodForm = true
                paymentMethodForm = true
            }

            summary {
                fields {
                    cart.net = true
                    cart.taxes = true
                    discount.gross = true
                    service.gross = true
                    total.gross = true
                }
            }
        }

        validation {
            orderItem {
                fields {
                    acceptTermsAndConditions {
                        validator = {$plugin.tx_cart.settings.validation.orderItem.fields.acceptTermsAndConditions.validator}
                        options.is = {$plugin.tx_cart.settings.validation.orderItem.fields.acceptTermsAndConditions.options.is}
                    }
                    acceptRevocationInstruction {
                        validator = {$plugin.tx_cart.settings.validation.orderItem.fields.acceptRevocationInstruction.validator}
                        options.is = {$plugin.tx_cart.settings.validation.orderItem.fields.acceptRevocationInstruction.options.is}
                    }
                    acceptPrivacyPolicy {
                        validator = {$plugin.tx_cart.settings.validation.orderItem.fields.acceptPrivacyPolicy.validator}
                        options.is = {$plugin.tx_cart.settings.validation.orderItem.fields.acceptPrivacyPolicy.options.is}
                    }
                }
            }
            billingAddress {
                fields {
                    salutation {
                        validator = {$plugin.tx_cart.settings.validation.billingAddress.fields.salutation.validator}
                    }
                    firstName {
                        validator = {$plugin.tx_cart.settings.validation.billingAddress.fields.firstName.validator}
                    }
                    lastName {
                        validator = {$plugin.tx_cart.settings.validation.billingAddress.fields.lastName.validator}
                    }
                    email {
                        validator = {$plugin.tx_cart.settings.validation.billingAddress.fields.email.validator}
                    }
                    phone {
                        validator = {$plugin.tx_cart.settings.validation.billingAddress.fields.phone.validator}
                    }
                    fax {
                        validator = {$plugin.tx_cart.settings.validation.billingAddress.fields.fax.validator}
                    }
                    street {
                        validator = {$plugin.tx_cart.settings.validation.billingAddress.fields.street.validator}
                    }
                    streetNumber {
                        validator = {$plugin.tx_cart.settings.validation.billingAddress.fields.streetNumber.validator}
                    }
                    zip {
                        validator = {$plugin.tx_cart.settings.validation.billingAddress.fields.zip.validator}
                    }
                    city {
                        validator = {$plugin.tx_cart.settings.validation.billingAddress.fields.city.validator}
                    }
                }
            }
            shippingAddress {
                fields {
                    salutation {
                        validator = {$plugin.tx_cart.settings.validation.shippingAddress.fields.salutation.validator}
                    }
                    firstName {
                        validator = {$plugin.tx_cart.settings.validation.shippingAddress.fields.firstName.validator}
                    }
                    lastName {
                        validator = {$plugin.tx_cart.settings.validation.shippingAddress.fields.lastName.validator}
                    }
                    email {
                        validator = {$plugin.tx_cart.settings.validation.shippingAddress.fields.email.validator}
                    }
                    phone {
                        validator = {$plugin.tx_cart.settings.validation.shippingAddress.fields.phone.validator}
                    }
                    fax {
                        validator = {$plugin.tx_cart.settings.validation.shippingAddress.fields.fax.validator}
                    }
                    street {
                        validator = {$plugin.tx_cart.settings.validation.shippingAddress.fields.street.validator}
                    }
                    streetNumber {
                        validator = {$plugin.tx_cart.settings.validation.shippingAddress.fields.streetNumber.validator}
                    }
                    zip {
                        validator = {$plugin.tx_cart.settings.validation.shippingAddress.fields.zip.validator}
                    }
                    city {
                        validator = {$plugin.tx_cart.settings.validation.shippingAddress.fields.city.validator}
                    }
                }
            }
        }
    }

    taxClasses {
        1 {
            value = {$plugin.tx_cart.taxClasses.1.value}
            calc = {$plugin.tx_cart.taxClasses.1.calc}
            name = {$plugin.tx_cart.taxClasses.1.name}
        }
        2 {
            value = {$plugin.tx_cart.taxClasses.2.value}
            calc = {$plugin.tx_cart.taxClasses.2.calc}
            name = {$plugin.tx_cart.taxClasses.2.name}
        }
        3 {
            value = {$plugin.tx_cart.taxClasses.3.value}
            calc = {$plugin.tx_cart.taxClasses.3.calc}
            name = {$plugin.tx_cart.taxClasses.3.name}
        }
    }

    shippings {
        de {
            preset = 1
            options {
                1 {
                    title = Standard
                    extra = 0.00
                    taxClassId = 1
                    status = open
                }
            }
        }
        at < .de
        ch < .de
    }

    payments {
        de {
            preset = 1
            options {
                1 {
                    title = Vorkasse
                    extra = 0.00
                    taxClassId = 1
                    status = open
                }
            }
        }
        at < .de
        ch < .de
    }

    orderNumber = COA
    orderNumber {
        10 = TEXT
        10.value = {$plugin.tx_cart.orderNumber.prefix}

        20 = TEXT
        20.current = 1
        20.setCurrent.field = orderNumber
        20.setCurrent.wrap = | + {$plugin.tx_cart.orderNumber.offset}
        20.prioriCalc = intval

        30 = TEXT
        30.value = {$plugin.tx_cart.orderNumber.suffix}
    }

    invoiceNumber = COA
    invoiceNumber {
        10 = TEXT
        10.value = {$plugin.tx_cart.invoiceNumber.prefix}

        20 = TEXT
        20.current = 1
        20.setCurrent.field = invoiceNumber
        20.setCurrent.wrap = | + {$plugin.tx_cart.invoiceNumber.offset}
        20.prioriCalc = intval

        30 = TEXT
        30.value = {$plugin.tx_cart.invoiceNumber.suffix}
    }

    deliveryNumber = COA
    deliveryNumber {
        10 = TEXT
        10.value = {$plugin.tx_cart.deliveryNumber.prefix}

        20 = TEXT
        20.current = 1
        20.setCurrent.field = deliveryNumber
        20.setCurrent.wrap = | + {$plugin.tx_cart.deliveryNumber.offset}
        20.prioriCalc = intval

        30 = TEXT
        30.value = {$plugin.tx_cart.deliveryNumber.suffix}
    }
}

module.tx_cart {
    invoiceNumber < plugin.tx_cart.invoiceNumber
    deliveryNumber < plugin.tx_cart.deliveryNumber
}


# use this lib to add custom information or content elements to your email template

temp.cartMailContentElement = RECORDS
temp.cartMailContentElement {
    tables = tt_content
    dontCheckPid = 1
    conf.tt_content = FLUIDTEMPLATE
    conf.tt_content {
        templateRootPaths.10 = EXT:cart/Resources/Private/Templates/Mail/
        partialRootPaths.10 = EXT:cart/Resources/Private/Partials/Mail/
        layoutRootPaths.10 = EXT:cart/Resources/Private/Layouts/
        templateName = ContentElement
    }
}

lib.cartMailHeader < temp.cartMailContentElement
lib.cartMailHeader {
    source = {$plugin.tx_cart.uids.lib.cartMailHeader}
}

lib.cartMailFooter < temp.cartMailContentElement
lib.cartMailFooter {
    source = {$plugin.tx_cart.uids.lib.cartMailFooter}
}

lib.cartMailFooterSignature < temp.cartMailContentElement
lib.cartMailFooterSignature {
    source = {$plugin.tx_cart.uids.lib.cartMailFooterSignature}
}

lib.cartMailFooterTermsOfService < temp.cartMailContentElement
lib.cartMailFooterTermsOfService {
    source = {$plugin.tx_cart.uids.lib.cartMailFooterTermsOfService}
}

lib.cartMailFooterRevocation < temp.cartMailContentElement
lib.cartMailFooterRevocation {
    source = {$plugin.tx_cart.uids.lib.cartMailFooterRevocation}
}

lib.cartMailFooterDataProtection < temp.cartMailContentElement
lib.cartMailFooterDataProtection {
    source = {$plugin.tx_cart.uids.lib.cartMailFooterDataProtection}
}

lib.cartMailFooterImpress < temp.cartMailContentElement
lib.cartMailFooterImpress {
    source = {$plugin.tx_cart.uids.lib.cartMailFooterImpress}
}

plugin.tx_form.settings.yamlConfigurations {
    1543219101 = EXT:cart/Configuration/Yaml/FormSetup.yaml
}

module.tx_form.settings.yamlConfigurations {
    1543219101 = EXT:cart/Configuration/Yaml/FormSetup.yaml
}
